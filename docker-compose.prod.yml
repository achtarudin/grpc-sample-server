services:

  # grpc-sample-server-prod:
  #   build:
  #     context: .
  #     dockerfile: docker/go.prod.Dockerfile
  #   container_name: grpc-sample-server-prod
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - GRPC_PORT=8000

  #   labels:
  #     - "traefik.enable=true"

  #     - "traefik.http.routers.grpc-sample-server-prod.rule=Host(`grpc-server.cutbray.tech`)"
  #     - "traefik.http.routers.grpc-sample-server-prod.entrypoints=websecure"
  #     - "traefik.http.services.grpc-sample-server-prod.loadbalancer.server.port=8000"

  #     - "traefik.http.routers.grpc-sample-server-prod.tls=true"
  #     - "traefik.http.routers.grpc-sample-server-prod.tls.certresolver=myresolver"

  grpc-sample-server-app:
    image: grpc-sample-server:latest
    container_name: grpc-sample-server-app
    ports:
      - "8000:8000"
    environment:
      - GRPC_PORT=8000

    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.grpc-sample-server-app.rule=Host(`grpc-server.cutbray.tech`)"
      - "traefik.http.routers.grpc-sample-server-app.entrypoints=websecure"
      - "traefik.http.services.grpc-sample-server-app.loadbalancer.server.port=8000"

      - "traefik.http.routers.grpc-sample-server-app.tls=true"
      - "traefik.http.routers.grpc-sample-server-app.tls.certresolver=myresolver"


networks:
  traefik-network:
    external: true
    name: traefik-network